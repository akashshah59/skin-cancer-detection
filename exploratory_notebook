{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d6065ad6",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-07-10T17:38:32.851357Z",
     "iopub.status.busy": "2024-07-10T17:38:32.850798Z",
     "iopub.status.idle": "2024-07-10T17:38:34.099375Z",
     "shell.execute_reply": "2024-07-10T17:38:34.097911Z"
    },
    "papermill": {
     "duration": 1.262774,
     "end_time": "2024-07-10T17:38:34.102710",
     "exception": false,
     "start_time": "2024-07-10T17:38:32.839936",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "import os\n",
    "\n",
    "# for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "#     for filename in filenames:\n",
    "#         print(os.path.join(dirname, filename))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1e4fea39",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T17:38:34.119630Z",
     "iopub.status.busy": "2024-07-10T17:38:34.118896Z",
     "iopub.status.idle": "2024-07-10T17:38:46.363199Z",
     "shell.execute_reply": "2024-07-10T17:38:46.361891Z"
    },
    "papermill": {
     "duration": 12.256372,
     "end_time": "2024-07-10T17:38:46.366553",
     "exception": false,
     "start_time": "2024-07-10T17:38:34.110181",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_18/3231693260.py:2: DtypeWarning: Columns (51,52) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  train_metadata = pd.read_csv('/kaggle/input/isic-2024-challenge/train-metadata.csv',low_memory = True)\n"
     ]
    }
   ],
   "source": [
    "HOME_DIRECTORY = 'kaggle/input/isic-2024-challenge/'\n",
    "train_metadata = pd.read_csv('/kaggle/input/isic-2024-challenge/train-metadata.csv',low_memory = True)\n",
    "test_metadata = pd.read_csv('/kaggle/input/isic-2024-challenge/test-metadata.csv',low_memory =True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "36c7962d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T17:38:46.385203Z",
     "iopub.status.busy": "2024-07-10T17:38:46.383614Z",
     "iopub.status.idle": "2024-07-10T17:38:46.394496Z",
     "shell.execute_reply": "2024-07-10T17:38:46.393117Z"
    },
    "papermill": {
     "duration": 0.023144,
     "end_time": "2024-07-10T17:38:46.397607",
     "exception": false,
     "start_time": "2024-07-10T17:38:46.374463",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(401059, 55)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_metadata.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b8045bea",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T17:38:46.416711Z",
     "iopub.status.busy": "2024-07-10T17:38:46.415417Z",
     "iopub.status.idle": "2024-07-10T17:38:46.629014Z",
     "shell.execute_reply": "2024-07-10T17:38:46.627585Z"
    },
    "papermill": {
     "duration": 0.226383,
     "end_time": "2024-07-10T17:38:46.632371",
     "exception": false,
     "start_time": "2024-07-10T17:38:46.405988",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "401059"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_metadata.isic_id.nunique() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ce613abd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T17:38:46.652685Z",
     "iopub.status.busy": "2024-07-10T17:38:46.652126Z",
     "iopub.status.idle": "2024-07-10T17:38:46.664735Z",
     "shell.execute_reply": "2024-07-10T17:38:46.663117Z"
    },
    "papermill": {
     "duration": 0.026764,
     "end_time": "2024-07-10T17:38:46.668020",
     "exception": false,
     "start_time": "2024-07-10T17:38:46.641256",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0009799056996601498"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_metadata.target.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "90e2a4f9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T17:38:46.686972Z",
     "iopub.status.busy": "2024-07-10T17:38:46.685798Z",
     "iopub.status.idle": "2024-07-10T17:38:46.734998Z",
     "shell.execute_reply": "2024-07-10T17:38:46.733485Z"
    },
    "papermill": {
     "duration": 0.06216,
     "end_time": "2024-07-10T17:38:46.738228",
     "exception": false,
     "start_time": "2024-07-10T17:38:46.676068",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1042"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_metadata.patient_id.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "508bd90a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T17:38:46.756935Z",
     "iopub.status.busy": "2024-07-10T17:38:46.756354Z",
     "iopub.status.idle": "2024-07-10T17:38:46.838631Z",
     "shell.execute_reply": "2024-07-10T17:38:46.837207Z"
    },
    "papermill": {
     "duration": 0.095551,
     "end_time": "2024-07-10T17:38:46.842003",
     "exception": false,
     "start_time": "2024-07-10T17:38:46.746452",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>target</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>patient_id</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>IP_2456971</th>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IP_1959239</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IP_9324599</th>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IP_0669361</th>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>IP_3905195</th>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            target\n",
       "patient_id        \n",
       "IP_2456971      14\n",
       "IP_1959239       8\n",
       "IP_9324599       7\n",
       "IP_0669361       7\n",
       "IP_3905195       6"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_metadata.groupby(['patient_id']).agg({'target':'sum'}).sort_values('target',ascending = False).head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "9f5f50c4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T17:38:46.861480Z",
     "iopub.status.busy": "2024-07-10T17:38:46.860879Z",
     "iopub.status.idle": "2024-07-10T17:38:46.990966Z",
     "shell.execute_reply": "2024-07-10T17:38:46.989489Z"
    },
    "papermill": {
     "duration": 0.14323,
     "end_time": "2024-07-10T17:38:46.993927",
     "exception": false,
     "start_time": "2024-07-10T17:38:46.850697",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>isic_id</th>\n",
       "      <th>target</th>\n",
       "      <th>patient_id</th>\n",
       "      <th>age_approx</th>\n",
       "      <th>sex</th>\n",
       "      <th>anatom_site_general</th>\n",
       "      <th>clin_size_long_diam_mm</th>\n",
       "      <th>image_type</th>\n",
       "      <th>tbp_tile_type</th>\n",
       "      <th>tbp_lv_A</th>\n",
       "      <th>...</th>\n",
       "      <th>lesion_id</th>\n",
       "      <th>iddx_full</th>\n",
       "      <th>iddx_1</th>\n",
       "      <th>iddx_2</th>\n",
       "      <th>iddx_3</th>\n",
       "      <th>iddx_4</th>\n",
       "      <th>iddx_5</th>\n",
       "      <th>mel_mitotic_index</th>\n",
       "      <th>mel_thick_mm</th>\n",
       "      <th>tbp_lv_dnn_lesion_confidence</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1220</th>\n",
       "      <td>ISIC_0103600</td>\n",
       "      <td>0</td>\n",
       "      <td>IP_2456971</td>\n",
       "      <td>60.0</td>\n",
       "      <td>male</td>\n",
       "      <td>lower extremity</td>\n",
       "      <td>3.76</td>\n",
       "      <td>TBP tile: close-up</td>\n",
       "      <td>3D: white</td>\n",
       "      <td>11.784011</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Benign</td>\n",
       "      <td>Benign</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>78.042740</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2964</th>\n",
       "      <td>ISIC_0145420</td>\n",
       "      <td>0</td>\n",
       "      <td>IP_2456971</td>\n",
       "      <td>60.0</td>\n",
       "      <td>male</td>\n",
       "      <td>posterior torso</td>\n",
       "      <td>2.74</td>\n",
       "      <td>TBP tile: close-up</td>\n",
       "      <td>3D: white</td>\n",
       "      <td>17.505310</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Benign</td>\n",
       "      <td>Benign</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>98.466611</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7598</th>\n",
       "      <td>ISIC_0260667</td>\n",
       "      <td>0</td>\n",
       "      <td>IP_2456971</td>\n",
       "      <td>60.0</td>\n",
       "      <td>male</td>\n",
       "      <td>posterior torso</td>\n",
       "      <td>3.12</td>\n",
       "      <td>TBP tile: close-up</td>\n",
       "      <td>3D: white</td>\n",
       "      <td>21.784206</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Benign</td>\n",
       "      <td>Benign</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>99.998081</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7892</th>\n",
       "      <td>ISIC_0268177</td>\n",
       "      <td>0</td>\n",
       "      <td>IP_2456971</td>\n",
       "      <td>60.0</td>\n",
       "      <td>male</td>\n",
       "      <td>anterior torso</td>\n",
       "      <td>2.60</td>\n",
       "      <td>TBP tile: close-up</td>\n",
       "      <td>3D: white</td>\n",
       "      <td>16.102577</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Benign</td>\n",
       "      <td>Benign</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>99.994957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8212</th>\n",
       "      <td>ISIC_0275762</td>\n",
       "      <td>0</td>\n",
       "      <td>IP_2456971</td>\n",
       "      <td>60.0</td>\n",
       "      <td>male</td>\n",
       "      <td>posterior torso</td>\n",
       "      <td>2.60</td>\n",
       "      <td>TBP tile: close-up</td>\n",
       "      <td>3D: white</td>\n",
       "      <td>23.041968</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Benign</td>\n",
       "      <td>Benign</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>77.218443</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395357</th>\n",
       "      <td>ISIC_9856283</td>\n",
       "      <td>0</td>\n",
       "      <td>IP_2456971</td>\n",
       "      <td>60.0</td>\n",
       "      <td>male</td>\n",
       "      <td>anterior torso</td>\n",
       "      <td>3.72</td>\n",
       "      <td>TBP tile: close-up</td>\n",
       "      <td>3D: white</td>\n",
       "      <td>20.770307</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Benign</td>\n",
       "      <td>Benign</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>99.998844</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395680</th>\n",
       "      <td>ISIC_9864511</td>\n",
       "      <td>0</td>\n",
       "      <td>IP_2456971</td>\n",
       "      <td>60.0</td>\n",
       "      <td>male</td>\n",
       "      <td>anterior torso</td>\n",
       "      <td>2.62</td>\n",
       "      <td>TBP tile: close-up</td>\n",
       "      <td>3D: white</td>\n",
       "      <td>18.050493</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Benign</td>\n",
       "      <td>Benign</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>99.998188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395959</th>\n",
       "      <td>ISIC_9872176</td>\n",
       "      <td>0</td>\n",
       "      <td>IP_2456971</td>\n",
       "      <td>60.0</td>\n",
       "      <td>male</td>\n",
       "      <td>upper extremity</td>\n",
       "      <td>3.06</td>\n",
       "      <td>TBP tile: close-up</td>\n",
       "      <td>3D: white</td>\n",
       "      <td>17.836664</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Benign</td>\n",
       "      <td>Benign</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>99.426705</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>398597</th>\n",
       "      <td>ISIC_9939770</td>\n",
       "      <td>0</td>\n",
       "      <td>IP_2456971</td>\n",
       "      <td>60.0</td>\n",
       "      <td>male</td>\n",
       "      <td>anterior torso</td>\n",
       "      <td>2.68</td>\n",
       "      <td>TBP tile: close-up</td>\n",
       "      <td>3D: white</td>\n",
       "      <td>19.071840</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Benign</td>\n",
       "      <td>Benign</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>99.998605</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>398966</th>\n",
       "      <td>ISIC_9949507</td>\n",
       "      <td>0</td>\n",
       "      <td>IP_2456971</td>\n",
       "      <td>60.0</td>\n",
       "      <td>male</td>\n",
       "      <td>upper extremity</td>\n",
       "      <td>3.77</td>\n",
       "      <td>TBP tile: close-up</td>\n",
       "      <td>3D: white</td>\n",
       "      <td>18.261723</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Benign</td>\n",
       "      <td>Benign</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>99.194908</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>445 rows × 55 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             isic_id  target  patient_id  age_approx   sex  \\\n",
       "1220    ISIC_0103600       0  IP_2456971        60.0  male   \n",
       "2964    ISIC_0145420       0  IP_2456971        60.0  male   \n",
       "7598    ISIC_0260667       0  IP_2456971        60.0  male   \n",
       "7892    ISIC_0268177       0  IP_2456971        60.0  male   \n",
       "8212    ISIC_0275762       0  IP_2456971        60.0  male   \n",
       "...              ...     ...         ...         ...   ...   \n",
       "395357  ISIC_9856283       0  IP_2456971        60.0  male   \n",
       "395680  ISIC_9864511       0  IP_2456971        60.0  male   \n",
       "395959  ISIC_9872176       0  IP_2456971        60.0  male   \n",
       "398597  ISIC_9939770       0  IP_2456971        60.0  male   \n",
       "398966  ISIC_9949507       0  IP_2456971        60.0  male   \n",
       "\n",
       "       anatom_site_general  clin_size_long_diam_mm          image_type  \\\n",
       "1220       lower extremity                    3.76  TBP tile: close-up   \n",
       "2964       posterior torso                    2.74  TBP tile: close-up   \n",
       "7598       posterior torso                    3.12  TBP tile: close-up   \n",
       "7892        anterior torso                    2.60  TBP tile: close-up   \n",
       "8212       posterior torso                    2.60  TBP tile: close-up   \n",
       "...                    ...                     ...                 ...   \n",
       "395357      anterior torso                    3.72  TBP tile: close-up   \n",
       "395680      anterior torso                    2.62  TBP tile: close-up   \n",
       "395959     upper extremity                    3.06  TBP tile: close-up   \n",
       "398597      anterior torso                    2.68  TBP tile: close-up   \n",
       "398966     upper extremity                    3.77  TBP tile: close-up   \n",
       "\n",
       "       tbp_tile_type   tbp_lv_A  ...  lesion_id  iddx_full  iddx_1  iddx_2  \\\n",
       "1220       3D: white  11.784011  ...        NaN     Benign  Benign     NaN   \n",
       "2964       3D: white  17.505310  ...        NaN     Benign  Benign     NaN   \n",
       "7598       3D: white  21.784206  ...        NaN     Benign  Benign     NaN   \n",
       "7892       3D: white  16.102577  ...        NaN     Benign  Benign     NaN   \n",
       "8212       3D: white  23.041968  ...        NaN     Benign  Benign     NaN   \n",
       "...              ...        ...  ...        ...        ...     ...     ...   \n",
       "395357     3D: white  20.770307  ...        NaN     Benign  Benign     NaN   \n",
       "395680     3D: white  18.050493  ...        NaN     Benign  Benign     NaN   \n",
       "395959     3D: white  17.836664  ...        NaN     Benign  Benign     NaN   \n",
       "398597     3D: white  19.071840  ...        NaN     Benign  Benign     NaN   \n",
       "398966     3D: white  18.261723  ...        NaN     Benign  Benign     NaN   \n",
       "\n",
       "        iddx_3  iddx_4  iddx_5  mel_mitotic_index  mel_thick_mm  \\\n",
       "1220       NaN     NaN     NaN                NaN           NaN   \n",
       "2964       NaN     NaN     NaN                NaN           NaN   \n",
       "7598       NaN     NaN     NaN                NaN           NaN   \n",
       "7892       NaN     NaN     NaN                NaN           NaN   \n",
       "8212       NaN     NaN     NaN                NaN           NaN   \n",
       "...        ...     ...     ...                ...           ...   \n",
       "395357     NaN     NaN     NaN                NaN           NaN   \n",
       "395680     NaN     NaN     NaN                NaN           NaN   \n",
       "395959     NaN     NaN     NaN                NaN           NaN   \n",
       "398597     NaN     NaN     NaN                NaN           NaN   \n",
       "398966     NaN     NaN     NaN                NaN           NaN   \n",
       "\n",
       "        tbp_lv_dnn_lesion_confidence  \n",
       "1220                       78.042740  \n",
       "2964                       98.466611  \n",
       "7598                       99.998081  \n",
       "7892                       99.994957  \n",
       "8212                       77.218443  \n",
       "...                              ...  \n",
       "395357                     99.998844  \n",
       "395680                     99.998188  \n",
       "395959                     99.426705  \n",
       "398597                     99.998605  \n",
       "398966                     99.194908  \n",
       "\n",
       "[445 rows x 55 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_metadata[train_metadata.patient_id == 'IP_2456971']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "266bf8dd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T17:38:47.015198Z",
     "iopub.status.busy": "2024-07-10T17:38:47.013859Z",
     "iopub.status.idle": "2024-07-10T17:38:47.021101Z",
     "shell.execute_reply": "2024-07-10T17:38:47.019589Z"
    },
    "papermill": {
     "duration": 0.021657,
     "end_time": "2024-07-10T17:38:47.024700",
     "exception": false,
     "start_time": "2024-07-10T17:38:47.003043",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_only_features = ['lesion_id','iddx_full','iddx_1','iddx_2','iddx_3','iddx_4','iddx_5','mel_mitotic_index','mel_thick_mm','tbp_lv_dnn_lesion_confidence']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "9d0deb72",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T17:38:47.045974Z",
     "iopub.status.busy": "2024-07-10T17:38:47.045420Z",
     "iopub.status.idle": "2024-07-10T17:38:47.136290Z",
     "shell.execute_reply": "2024-07-10T17:38:47.134771Z"
    },
    "papermill": {
     "duration": 0.105971,
     "end_time": "2024-07-10T17:38:47.139993",
     "exception": false,
     "start_time": "2024-07-10T17:38:47.034022",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_compressed = train_metadata.drop(train_only_features, axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "22d27860",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T17:38:47.161397Z",
     "iopub.status.busy": "2024-07-10T17:38:47.160878Z",
     "iopub.status.idle": "2024-07-10T17:38:47.169593Z",
     "shell.execute_reply": "2024-07-10T17:38:47.168259Z"
    },
    "papermill": {
     "duration": 0.022447,
     "end_time": "2024-07-10T17:38:47.172361",
     "exception": false,
     "start_time": "2024-07-10T17:38:47.149914",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(401059, 45)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_compressed.shape "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "e6c46c8b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T17:38:47.193268Z",
     "iopub.status.busy": "2024-07-10T17:38:47.192652Z",
     "iopub.status.idle": "2024-07-10T17:38:47.204807Z",
     "shell.execute_reply": "2024-07-10T17:38:47.203519Z"
    },
    "papermill": {
     "duration": 0.026088,
     "end_time": "2024-07-10T17:38:47.207721",
     "exception": false,
     "start_time": "2024-07-10T17:38:47.181633",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "isic_id                   object\n",
       "patient_id                object\n",
       "sex                       object\n",
       "anatom_site_general       object\n",
       "image_type                object\n",
       "tbp_tile_type             object\n",
       "tbp_lv_location           object\n",
       "tbp_lv_location_simple    object\n",
       "attribution               object\n",
       "copyright_license         object\n",
       "dtype: object"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_compressed.dtypes[train_compressed.dtypes == 'object']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "347d9238",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T17:38:47.229268Z",
     "iopub.status.busy": "2024-07-10T17:38:47.228736Z",
     "iopub.status.idle": "2024-07-10T17:39:25.082108Z",
     "shell.execute_reply": "2024-07-10T17:39:25.080107Z"
    },
    "papermill": {
     "duration": 37.868451,
     "end_time": "2024-07-10T17:39:25.085896",
     "exception": false,
     "start_time": "2024-07-10T17:38:47.217445",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: lightgbm in /opt/conda/lib/python3.10/site-packages (4.2.0)\r\n",
      "Requirement already satisfied: numpy in /opt/conda/lib/python3.10/site-packages (from lightgbm) (1.26.4)\r\n",
      "Requirement already satisfied: scipy in /opt/conda/lib/python3.10/site-packages (from lightgbm) (1.11.4)\r\n"
     ]
    }
   ],
   "source": [
    "!pip install lightgbm "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "63392671",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T17:39:25.109762Z",
     "iopub.status.busy": "2024-07-10T17:39:25.107949Z",
     "iopub.status.idle": "2024-07-10T17:39:29.113846Z",
     "shell.execute_reply": "2024-07-10T17:39:29.112622Z"
    },
    "papermill": {
     "duration": 4.020845,
     "end_time": "2024-07-10T17:39:29.116889",
     "exception": false,
     "start_time": "2024-07-10T17:39:25.096044",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from category_encoders.hashing import HashingEncoder\n",
    "from sklearn.pipeline import make_pipeline \n",
    "from sklearn.impute import KNNImputer\n",
    "from lightgbm import LGBMClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "33c113f9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T17:39:29.136933Z",
     "iopub.status.busy": "2024-07-10T17:39:29.136242Z",
     "iopub.status.idle": "2024-07-10T17:39:29.144367Z",
     "shell.execute_reply": "2024-07-10T17:39:29.143129Z"
    },
    "papermill": {
     "duration": 0.021106,
     "end_time": "2024-07-10T17:39:29.147037",
     "exception": false,
     "start_time": "2024-07-10T17:39:29.125931",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "lgb_params = {\n",
    "    'objective': 'binary',\n",
    "    \"random_state\": 42,\n",
    "    \"n_estimators\": 500,\n",
    "    'learning_rate': 0.01,\n",
    "    'bagging_freq': 1,\n",
    "    'pos_bagging_fraction': 0.75,\n",
    "    'neg_bagging_fraction': 0.05,\n",
    "    'feature_fraction': 0.8,\n",
    "    'lambda_l1': 0.8,\n",
    "    'lambda_l2': 0.8,\n",
    "    \"verbosity\": -1,\n",
    "    # \"extra_trees\": True\n",
    "}\n",
    "\n",
    "pip = make_pipeline(HashingEncoder(),\n",
    "                    KNNImputer(),\n",
    "                    LGBMClassifier(**lgb_params)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "90355618",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T17:39:29.168101Z",
     "iopub.status.busy": "2024-07-10T17:39:29.167647Z",
     "iopub.status.idle": "2024-07-10T17:46:21.335550Z",
     "shell.execute_reply": "2024-07-10T17:46:21.334001Z"
    },
    "papermill": {
     "duration": 412.184814,
     "end_time": "2024-07-10T17:46:21.342031",
     "exception": false,
     "start_time": "2024-07-10T17:39:29.157217",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 3 µs, sys: 1 µs, total: 4 µs\n",
      "Wall time: 8.58 µs\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;hashingencoder&#x27;,\n",
       "                 HashingEncoder(cols=[&#x27;isic_id&#x27;, &#x27;patient_id&#x27;, &#x27;sex&#x27;,\n",
       "                                      &#x27;anatom_site_general&#x27;, &#x27;image_type&#x27;,\n",
       "                                      &#x27;tbp_tile_type&#x27;, &#x27;tbp_lv_location&#x27;,\n",
       "                                      &#x27;tbp_lv_location_simple&#x27;, &#x27;attribution&#x27;,\n",
       "                                      &#x27;copyright_license&#x27;],\n",
       "                                max_process=2, max_sample=200529)),\n",
       "                (&#x27;knnimputer&#x27;, KNNImputer()),\n",
       "                (&#x27;lgbmclassifier&#x27;,\n",
       "                 LGBMClassifier(bagging_freq=1, feature_fraction=0.8,\n",
       "                                lambda_l1=0.8, lambda_l2=0.8,\n",
       "                                learning_rate=0.01, n_estimators=500,\n",
       "                                neg_bagging_fraction=0.05, objective=&#x27;binary&#x27;,\n",
       "                                pos_bagging_fraction=0.75, random_state=42,\n",
       "                                verbosity=-1))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;hashingencoder&#x27;,\n",
       "                 HashingEncoder(cols=[&#x27;isic_id&#x27;, &#x27;patient_id&#x27;, &#x27;sex&#x27;,\n",
       "                                      &#x27;anatom_site_general&#x27;, &#x27;image_type&#x27;,\n",
       "                                      &#x27;tbp_tile_type&#x27;, &#x27;tbp_lv_location&#x27;,\n",
       "                                      &#x27;tbp_lv_location_simple&#x27;, &#x27;attribution&#x27;,\n",
       "                                      &#x27;copyright_license&#x27;],\n",
       "                                max_process=2, max_sample=200529)),\n",
       "                (&#x27;knnimputer&#x27;, KNNImputer()),\n",
       "                (&#x27;lgbmclassifier&#x27;,\n",
       "                 LGBMClassifier(bagging_freq=1, feature_fraction=0.8,\n",
       "                                lambda_l1=0.8, lambda_l2=0.8,\n",
       "                                learning_rate=0.01, n_estimators=500,\n",
       "                                neg_bagging_fraction=0.05, objective=&#x27;binary&#x27;,\n",
       "                                pos_bagging_fraction=0.75, random_state=42,\n",
       "                                verbosity=-1))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">HashingEncoder</label><div class=\"sk-toggleable__content\"><pre>HashingEncoder(cols=[&#x27;isic_id&#x27;, &#x27;patient_id&#x27;, &#x27;sex&#x27;, &#x27;anatom_site_general&#x27;,\n",
       "                     &#x27;image_type&#x27;, &#x27;tbp_tile_type&#x27;, &#x27;tbp_lv_location&#x27;,\n",
       "                     &#x27;tbp_lv_location_simple&#x27;, &#x27;attribution&#x27;,\n",
       "                     &#x27;copyright_license&#x27;],\n",
       "               max_process=2, max_sample=200529)</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNNImputer</label><div class=\"sk-toggleable__content\"><pre>KNNImputer()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LGBMClassifier</label><div class=\"sk-toggleable__content\"><pre>LGBMClassifier(bagging_freq=1, feature_fraction=0.8, lambda_l1=0.8,\n",
       "               lambda_l2=0.8, learning_rate=0.01, n_estimators=500,\n",
       "               neg_bagging_fraction=0.05, objective=&#x27;binary&#x27;,\n",
       "               pos_bagging_fraction=0.75, random_state=42, verbosity=-1)</pre></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "Pipeline(steps=[('hashingencoder',\n",
       "                 HashingEncoder(cols=['isic_id', 'patient_id', 'sex',\n",
       "                                      'anatom_site_general', 'image_type',\n",
       "                                      'tbp_tile_type', 'tbp_lv_location',\n",
       "                                      'tbp_lv_location_simple', 'attribution',\n",
       "                                      'copyright_license'],\n",
       "                                max_process=2, max_sample=200529)),\n",
       "                ('knnimputer', KNNImputer()),\n",
       "                ('lgbmclassifier',\n",
       "                 LGBMClassifier(bagging_freq=1, feature_fraction=0.8,\n",
       "                                lambda_l1=0.8, lambda_l2=0.8,\n",
       "                                learning_rate=0.01, n_estimators=500,\n",
       "                                neg_bagging_fraction=0.05, objective='binary',\n",
       "                                pos_bagging_fraction=0.75, random_state=42,\n",
       "                                verbosity=-1))])"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%time\n",
    "pip.fit(train_compressed.drop('target',\n",
    "                              axis = 1), train_compressed['target'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "11d1c925",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T17:46:21.363357Z",
     "iopub.status.busy": "2024-07-10T17:46:21.362928Z",
     "iopub.status.idle": "2024-07-10T17:46:21.373448Z",
     "shell.execute_reply": "2024-07-10T17:46:21.372316Z"
    },
    "papermill": {
     "duration": 0.024425,
     "end_time": "2024-07-10T17:46:21.375852",
     "exception": false,
     "start_time": "2024-07-10T17:46:21.351427",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\"\\nimport pickle\\n\\nwith open('metadata-model.pkl','wb') as f:\\n    pickle.dump(pip,f)\\n\""
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\"\"\"\n",
    "import pickle\n",
    "\n",
    "with open('metadata-model.pkl','wb') as f:\n",
    "    pickle.dump(pip,f)\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "55383366",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T17:46:21.396811Z",
     "iopub.status.busy": "2024-07-10T17:46:21.396353Z",
     "iopub.status.idle": "2024-07-10T17:46:21.731898Z",
     "shell.execute_reply": "2024-07-10T17:46:21.730453Z"
    },
    "papermill": {
     "duration": 0.349417,
     "end_time": "2024-07-10T17:46:21.734848",
     "exception": false,
     "start_time": "2024-07-10T17:46:21.385431",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "probs = pip.predict_proba(test_metadata)[:,1]\n",
    "test_metadata['target'] = probs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "be5fd202",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T17:46:21.756165Z",
     "iopub.status.busy": "2024-07-10T17:46:21.755741Z",
     "iopub.status.idle": "2024-07-10T17:46:21.767604Z",
     "shell.execute_reply": "2024-07-10T17:46:21.766282Z"
    },
    "papermill": {
     "duration": 0.026045,
     "end_time": "2024-07-10T17:46:21.770652",
     "exception": false,
     "start_time": "2024-07-10T17:46:21.744607",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_metadata[['isic_id','target']].to_csv('submission.csv', index = False)"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 8940774,
     "sourceId": 63056,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 473.629156,
   "end_time": "2024-07-10T17:46:22.806949",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-07-10T17:38:29.177793",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
